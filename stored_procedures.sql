-- STORE PROCEDURE:

-- USUARIO:
-- Stored Procedure para insertar un nuevo usuario
CREATE PROCEDURE sp_InsertarUsuario
    @ID_USUARIO NVARCHAR(10),
    @NOMBRES NVARCHAR(100),
    @APELLIDOS NVARCHAR(100),
    @FECHA_NACIMIENTO DATE,
    @EMAIL NVARCHAR(100)
AS
BEGIN
    INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, FECHA_NACIMIENTO, EMAIL)
    VALUES (@ID_USUARIO, @NOMBRES, @APELLIDOS, @FECHA_NACIMIENTO, @EMAIL);
END;

-- Stored Procedure para actualizar un usuario existente
CREATE PROCEDURE sp_ActualizarUsuario
    @ID_USUARIO NVARCHAR(10),
    @NOMBRES NVARCHAR(100) = NULL,
    @APELLIDOS NVARCHAR(100) = NULL,
    @FECHA_NACIMIENTO DATE = NULL,
    @EMAIL NVARCHAR(100) = NULL
AS
BEGIN
    UPDATE USUARIO
    SET 
        NOMBRES = COALESCE(@NOMBRES, NOMBRES),
        APELLIDOS = COALESCE(@APELLIDOS, APELLIDOS),
        FECHA_NACIMIENTO = COALESCE(@FECHA_NACIMIENTO, FECHA_NACIMIENTO),
        EMAIL = COALESCE(@EMAIL, EMAIL)
    WHERE ID_USUARIO = @ID_USUARIO;
END;

-- Stored Procedure para consultar todos los usuarios
CREATE PROCEDURE sp_ConsultarUsuarios
AS
BEGIN
    SELECT * FROM USUARIO;
END;

-- IMC:
-- Stored Procedure para insertar un nuevo registro de IMC
CREATE PROCEDURE sp_InsertarIMC
    @ID_IMC NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @PESO DECIMAL(5, 2),
    @ALTURA DECIMAL(5, 2)
AS
BEGIN
    INSERT INTO IMC (ID_IMC, ID_USUARIO, PESO, ALTURA)
    VALUES (@ID_IMC, @ID_USUARIO, @PESO, @ALTURA);
END;

-- Stored Procedure para consultar todos los registros de IMC
CREATE PROCEDURE sp_ConsultarIMC
AS
BEGIN
    SELECT * FROM IMC;
END;

-- Stored Procedure para eliminar un registro de IMC por ID
CREATE PROCEDURE sp_EliminarIMC
    @ID_IMC NVARCHAR(10)
AS
BEGIN
    DELETE FROM IMC
    WHERE ID_IMC = @ID_IMC;
END;

-- TEMPERATURA:
-- Stored Procedure para insertar un nuevo registro de temperatura
CREATE PROCEDURE sp_InsertarTemperatura
    @ID_REGIS_TEMP NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @FECHA_HORA DATETIME,
    @TEMPERATURA DECIMAL(4, 2)
AS
BEGIN
    INSERT INTO TEMPERATURA (ID_REGIS_TEMP, ID_USUARIO, FECHA_HORA, TEMPERATURA)
    VALUES (@ID_REGIS_TEMP, @ID_USUARIO, @FECHA_HORA, @TEMPERATURA);
END;

-- Stored Procedure para consultar todos los registros de temperatura
CREATE PROCEDURE sp_ConsultarTemperatura
AS
BEGIN
    SELECT * FROM TEMPERATURA;
END;

-- Stored Procedure para eliminar un registro de temperatura por ID
CREATE PROCEDURE sp_EliminarTemperatura
    @ID_REGIS_TEMP NVARCHAR(10)
AS
BEGIN
    DELETE FROM TEMPERATURA
    WHERE ID_REGIS_TEMP = @ID_REGIS_TEMP;
END;

-- PULSO:
-- Stored Procedure para insertar un nuevo registro de pulso
CREATE PROCEDURE sp_InsertarPulso
    @ID_REGIS_PULSO NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @FECHA_HORA DATETIME,
    @VALOR_PULSO INT
AS
BEGIN
    INSERT INTO PULSO (ID_REGIS_PULSO, ID_USUARIO, FECHA_HORA, VALOR_PULSO)
    VALUES (@ID_REGIS_PULSO, @ID_USUARIO, @FECHA_HORA, @VALOR_PULSO);
END;

-- Stored Procedure para consultar todos los registros de pulso
CREATE PROCEDURE sp_ConsultarPulso
AS
BEGIN
    SELECT * FROM PULSO;
END;

-- Stored Procedure para eliminar un registro de pulso por ID
CREATE PROCEDURE sp_EliminarPulso
    @ID_REGIS_PULSO NVARCHAR(10)
AS
BEGIN
    DELETE FROM PULSO
    WHERE ID_REGIS_PULSO = @ID_REGIS_PULSO;
END;

-- MOVIMIENTO:
-- Stored Procedure para insertar un nuevo registro de movimiento
CREATE PROCEDURE sp_InsertarMovimiento
    @ID_REGISTRO_MOV NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @FECHA DATE,
    @PASOS_TOTALES INT,
    @NOTIFICACION_1000_PASOS BIT
AS
BEGIN
    INSERT INTO MOVIMIENTO (ID_REGISTRO_MOV, ID_USUARIO, FECHA, PASOS_TOTALES, NOTIFICACION_1000_PASOS)
    VALUES (@ID_REGISTRO_MOV, @ID_USUARIO, @FECHA, @PASOS_TOTALES, @NOTIFICACION_1000_PASOS);
END;

-- Stored Procedure para consultar todos los registros de movimiento
CREATE PROCEDURE sp_ConsultarMovimiento
AS
BEGIN
    SELECT * FROM MOVIMIENTO;
END;

-- Stored Procedure para eliminar un registro de movimiento por ID
CREATE PROCEDURE sp_EliminarMovimiento
    @ID_REGISTRO_MOV NVARCHAR(10)
AS
BEGIN
    DELETE FROM MOVIMIENTO
    WHERE ID_REGISTRO_MOV = @ID_REGISTRO_MOV;
END;

-- HISTORIAL MEDICO:
CREATE PROCEDURE sp_InsertarHistorialMedico
    @ID_HISTORIAL_MEDICO NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @FECHA_VISITA DATE,
    @TIPO_VISITA NVARCHAR(50),
    @RESULTADOS_EXAMENES NVARCHAR(255),
    @OBSERVACIONES NVARCHAR(255),
    @PROXIMA_VISITA DATE
AS
BEGIN
    INSERT INTO HISTORIAL_MEDICO (ID_HISTORIAL_MEDICO, ID_USUARIO, FECHA_VISITA, TIPO_VISITA, RESULTADOS_EXAMENES, OBSERVACIONES, PROXIMA_VISITA)
    VALUES (@ID_HISTORIAL_MEDICO, @ID_USUARIO, @FECHA_VISITA, @TIPO_VISITA, @RESULTADOS_EXAMENES, @OBSERVACIONES, @PROXIMA_VISITA);
END;

CREATE PROCEDURE sp_SeleccionarHistorialMedico
AS
BEGIN
    SELECT 
        ID_HISTORIAL_MEDICO, 
        ID_USUARIO, 
        FORMAT(FECHA_VISITA, 'dd-MM-yyyy') AS FECHA_VISITA, 
        TIPO_VISITA, 
        RESULTADOS_EXAMENES, 
        OBSERVACIONES,
        FORMAT(PROXIMA_VISITA, 'dd-MM-yyyy') AS PROXIMA_VISITA
    FROM HISTORIAL_MEDICO;
END;

CREATE PROCEDURE sp_EliminarHistorialMedico
    @ID_HISTORIAL_MEDICO NVARCHAR(10)
AS
BEGIN
    DELETE FROM HISTORIAL_MEDICO WHERE ID_HISTORIAL_MEDICO = @ID_HISTORIAL_MEDICO;
END;

-- SOLICITUDES CITAS:
CREATE PROCEDURE sp_InsertarSolicitudCita
    @ID_SOLICITUD_CITA NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @FECHA_SOLICITUD DATE,
    @FECHA_CITA DATE,
    @ESTADO_CITA NVARCHAR(50),
    @RECORDATORIO_ENVIADO BIT
AS
BEGIN
    INSERT INTO SOLICITUDES_CITAS (ID_SOLICITUD_CITA, ID_USUARIO, FECHA_SOLICITUD, FECHA_CITA, ESTADO_CITA, RECORDATORIO_ENVIADO)
    VALUES (@ID_SOLICITUD_CITA, @ID_USUARIO, @FECHA_SOLICITUD, @FECHA_CITA, @ESTADO_CITA, @RECORDATORIO_ENVIADO);
END;

CREATE PROCEDURE sp_SeleccionarSolicitudCita
AS
BEGIN
    SELECT 
        ID_SOLICITUD_CITA, 
        ID_USUARIO, 
        FORMAT(FECHA_SOLICITUD, 'dd-MM-yyyy') AS FECHA_SOLICITUD,
        FORMAT(FECHA_CITA, 'dd-MM-yyyy') AS FECHA_CITA, 
        ESTADO_CITA,
        CASE WHEN RECORDATORIO_ENVIADO = 1 THEN 'SI' ELSE 'NO' END AS RECORDATORIO_ENVIADO
    FROM SOLICITUDES_CITAS;
END;

CREATE PROCEDURE sp_EliminarSolicitudCita
    @ID_SOLICITUD_CITA NVARCHAR(10)
AS
BEGIN
    DELETE FROM SOLICITUDES_CITAS WHERE ID_SOLICITUD_CITA = @ID_SOLICITUD_CITA;
END;

-- SERVICIOS MEDICOS:
CREATE PROCEDURE sp_InsertarServicioMedico
    @ID_SERVICIO NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @TIPO_SERVICIO NVARCHAR(50),
    @FECHA_SERVICIO DATE,
    @ESTADO_SERVICIO NVARCHAR(50)
AS
BEGIN
    INSERT INTO SERVICIOS_MEDICOS (ID_SERVICIO, ID_USUARIO, TIPO_SERVICIO, FECHA_SERVICIO, ESTADO_SERVICIO)
    VALUES (@ID_SERVICIO, @ID_USUARIO, @TIPO_SERVICIO, @FECHA_SERVICIO, @ESTADO_SERVICIO);
END;

CREATE PROCEDURE sp_SeleccionarServiciosMedicos
AS
BEGIN
    SELECT 
        ID_SERVICIO, 
        ID_USUARIO, 
        TIPO_SERVICIO, 
        FORMAT(FECHA_SERVICIO, 'dd-MM-yyyy') AS FECHA_SERVICIO, 
        ESTADO_SERVICIO
    FROM SERVICIOS_MEDICOS;
END;

CREATE PROCEDURE sp_EliminarServicioMedico
    @ID_SERVICIO NVARCHAR(10)
AS
BEGIN
    DELETE FROM SERVICIOS_MEDICOS WHERE ID_SERVICIO = @ID_SERVICIO;
END;

-- ESPECIALIDAD:
-- Insertar Especialidad
CREATE PROCEDURE InsertarEspecialidad
    @ID_ESPECIALIDAD NVARCHAR(10),
    @NOMBRE_ESPECIALIDAD NVARCHAR(100),
    @DESCRIPCION NVARCHAR(255)
AS
BEGIN
    INSERT INTO ESPECIALIDAD (ID_ESPECIALIDAD, NOMBRE_ESPECIALIDAD, DESCRIPCION)
    VALUES (@ID_ESPECIALIDAD, @NOMBRE_ESPECIALIDAD, @DESCRIPCION);
END;

-- Seleccionar Especialidades
CREATE PROCEDURE SeleccionarEspecialidades
AS
BEGIN
    SELECT * FROM ESPECIALIDAD;
END;

-- Eliminar Especialidad
CREATE PROCEDURE EliminarEspecialidad
    @ID_ESPECIALIDAD NVARCHAR(10)
AS
BEGIN
    DELETE FROM ESPECIALIDAD WHERE ID_ESPECIALIDAD = @ID_ESPECIALIDAD;
END;

-- MEDICO:
-- Insertar Medico
CREATE PROCEDURE InsertarMedico
    @ID_MEDICO NVARCHAR(10),
    @NOMBRE NVARCHAR(100),
    @APELLIDO NVARCHAR(100),
    @ID_ESPECIALIDAD NVARCHAR(10),
    @EMAIL NVARCHAR(100),
    @TELEFONO NVARCHAR(15),
    @CONSULTORIO NVARCHAR(50)
AS
BEGIN
    INSERT INTO MEDICO (ID_MEDICO, NOMBRE, APELLIDO, ID_ESPECIALIDAD, EMAIL, TELEFONO, CONSULTORIO)
    VALUES (@ID_MEDICO, @NOMBRE, @APELLIDO, @ID_ESPECIALIDAD, @EMAIL, @TELEFONO, @CONSULTORIO);
END;

-- Seleccionar Medicos
CREATE PROCEDURE SeleccionarMedicos
AS
BEGIN
    SELECT ID_MEDICO, NOMBRE, APELLIDO, ID_ESPECIALIDAD, EMAIL, TELEFONO, CONSULTORIO 
    FROM MEDICO;
END;

-- Eliminar Medico
CREATE PROCEDURE EliminarMedico
    @ID_MEDICO NVARCHAR(10)
AS
BEGIN
    DELETE FROM MEDICO WHERE ID_MEDICO = @ID_MEDICO;
END;

-- HORARIO  MEDICO:
-- Insertar Horario Medico
CREATE PROCEDURE InsertarHorarioMedico
    @ID_HORARIO NVARCHAR(10),
    @ID_MEDICO NVARCHAR(10),
    @DIA_SEMANA NVARCHAR(20),
    @HORA_INICIO TIME,
    @HORA_FIN TIME
AS
BEGIN
    INSERT INTO HORARIOMEDICO (ID_HORARIO, ID_MEDICO, DIA_SEMANA, HORA_INICIO, HORA_FIN)
    VALUES (@ID_HORARIO, @ID_MEDICO, @DIA_SEMANA, @HORA_INICIO, @HORA_FIN);
END;

-- Seleccionar Horarios Medicos
CREATE PROCEDURE SeleccionarHorariosMedicos
AS
BEGIN
    SELECT ID_HORARIO, ID_MEDICO, DIA_SEMANA, 
           CONVERT(VARCHAR(5), HORA_INICIO, 108) AS HORA_INICIO, 
           CONVERT(VARCHAR(5), HORA_FIN, 108) AS HORA_FIN 
    FROM HORARIOMEDICO;
END;

-- Eliminar Horario Medico
CREATE PROCEDURE EliminarHorarioMedico
    @ID_HORARIO NVARCHAR(10)
AS
BEGIN
    DELETE FROM HORARIOMEDICO WHERE ID_HORARIO = @ID_HORARIO;
END;

-- CITA:
-- Insertar Cita
CREATE PROCEDURE InsertarCita
    @ID_CITA NVARCHAR(10),
    @ID_USUARIO NVARCHAR(10),
    @ID_MEDICO NVARCHAR(10),
    @FECHA_CITA DATE,
    @HORA_CITA TIME,
    @MOTIVO_CITA NVARCHAR(255),
    @ESTADO_CITA NVARCHAR(50)
AS
BEGIN
    INSERT INTO CITA (ID_CITA, ID_USUARIO, ID_MEDICO, FECHA_CITA, HORA_CITA, MOTIVO_CITA, ESTADO_CITA)
    VALUES (@ID_CITA, @ID_USUARIO, @ID_MEDICO, @FECHA_CITA, @HORA_CITA, @MOTIVO_CITA, @ESTADO_CITA);
END;

-- Seleccionar Citas
CREATE PROCEDURE SeleccionarCitas
AS
BEGIN
    SELECT ID_CITA, ID_USUARIO, ID_MEDICO, 
           CONVERT(VARCHAR(10), FECHA_CITA, 105) AS FECHA_CITA, 
           CONVERT(VARCHAR(5), HORA_CITA, 108) AS HORA_CITA, 
           MOTIVO_CITA, ESTADO_CITA 
    FROM CITA;
END;

-- Eliminar Cita
CREATE PROCEDURE EliminarCita
    @ID_CITA NVARCHAR(10)
AS
BEGIN
    DELETE FROM CITA WHERE ID_CITA = @ID_CITA;
END;

-- CONSULTORIO:
-- Insertar Consultorio
CREATE PROCEDURE InsertarConsultorio
    @ID_CONSULTORIO NVARCHAR(10),
    @NUMERO_CONSULTORIO NVARCHAR(10),
    @UBICACION NVARCHAR(255)
AS
BEGIN
    INSERT INTO CONSULTORIO (ID_CONSULTORIO, NUMERO_CONSULTORIO, UBICACION)
    VALUES (@ID_CONSULTORIO, @NUMERO_CONSULTORIO, @UBICACION);
END;

-- Seleccionar Consultorios
CREATE PROCEDURE SeleccionarConsultorios
AS
BEGIN
    SELECT * FROM CONSULTORIO;
END;

-- Eliminar Consultorio
CREATE PROCEDURE EliminarConsultorio
    @ID_CONSULTORIO NVARCHAR(10)
AS
BEGIN
    DELETE FROM CONSULTORIO WHERE ID_CONSULTORIO = @ID_CONSULTORIO;
END;

-- DISPONIBILIDAD MEDICA:
-- Insertar Disponibilidad Medica
CREATE PROCEDURE InsertarDisponibilidadMedica
    @ID_DISPONIBILIDAD NVARCHAR(10),
    @ID_MEDICO NVARCHAR(10),
    @FECHA_DISPONIBILIDAD DATE,
    @ESTADO_DISPONIBILIDAD NVARCHAR(50)
AS
BEGIN
    INSERT INTO DISPONIBILIDADMEDICA (ID_DISPONIBILIDAD, ID_MEDICO, FECHA_DISPONIBILIDAD, ESTADO_DISPONIBILIDAD)
    VALUES (@ID_DISPONIBILIDAD, @ID_MEDICO, @FECHA_DISPONIBILIDAD, @ESTADO_DISPONIBILIDAD);
END;

-- Seleccionar Disponibilidades Medicas
CREATE PROCEDURE SeleccionarDisponibilidadesMedicas
AS
BEGIN
    SELECT ID_DISPONIBILIDAD, ID_MEDICO, 
           FORMAT(FECHA_DISPONIBILIDAD, 'dd-MM-yyyy') AS FECHA_DISPONIBILIDAD, 
           ESTADO_DISPONIBILIDAD 
    FROM DISPONIBILIDADMEDICA;
END;

-- Eliminar Disponibilidad Medica
CREATE PROCEDURE EliminarDisponibilidadMedica
    @ID_DISPONIBILIDAD NVARCHAR(10)
AS
BEGIN
    DELETE FROM DISPONIBILIDADMEDICA WHERE ID_DISPONIBILIDAD = @ID_DISPONIBILIDAD;
END;
